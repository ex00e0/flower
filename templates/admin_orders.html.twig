{% extends 'base.html.twig' %}

{% block title %}Все заказы{% endblock %}

{% block body %}
{% for message in app.flashes('success') %}
    <script> alert('{{ message }}')</script>
{% endfor %}
   <main class="all_main">
    <div class="big_void"></div>
        <div class="catalogue_small">
            <div class="r1 c2"><div>ВСЕ ЗАКАЗЫ</div></div>
        </div>
        <div class="big_void"></div>
       
    
    {% if orders is empty %}
        <div class="empty_cart">Заказов нет</div>
    {% else %}
        <div class="th_order">
            <div></div>
            <div class="js_cent">Номер</div>
            <div class="js_cent">Дата</div>
            <div class="js_cent">Сумма</div>
            <div class="js_cent">Состав заказа</div>
            <div class="js_cent">Статус</div>

        </div>
        {% for order in orders %}
        <div class="tr_order">
            <div></div>
            <div>{{ order.getId() }}</div>
                        <div>{{ order.getDate()|date('d.m.Y H:i') }}</div>
                        <div>{{ order.getSum() }} ₽</div>
                        <div>
                            {% set compound = order.getCompound() %}
                            {% for itemId, quantity in compound %}
                                <p>{{itemNames[itemId] ?? 'Неизвестный товар' }}, Количество: {{ quantity }}</p>
                            {% endfor %}
                        </div>
            <div>
              <select name="order_status" class="order-status" data-order-id="{{ order.getId() }}">
    {% set statuses = ['создан', 'отклонен', 'принят', 'выполнен'] %}
    
    {% for status in statuses %}
        <option value="{{ status }}" {% if order.getStatus() == status %}selected{% endif %} {% if (order.getStatus() == 'отклонен') or (order.getStatus() == 'выполнен') or (order.getStatus() == 'принят' and (status == 'создан' or status == 'отклонен') ) %}disabled{% endif %}>
            {{ status }}
        </option>
    {% endfor %}
</select>

<script>
   document.addEventListener('DOMContentLoaded', function () {
    function updateOrderStatus(select) {
        select.addEventListener('change', function () {
            let orderId = this.dataset.orderId;
            let newStatus = this.value;

            fetch(`/update-order-status/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Статус заказа обновлён');

                    // Перерисовка <select> с новыми условиями
                    let updatedSelect = document.createElement('select');
                    updatedSelect.classList.add('order-status');
                    updatedSelect.dataset.orderId = orderId;

                    let statuses = ['создан', 'отклонен', 'принят', 'выполнен'];
                    statuses.forEach(status => {
                        let option = document.createElement('option');
                        option.value = status;
                        option.textContent = status;

                        // Устанавливаем выбранный статус
                        if (status === newStatus) {
                            option.selected = true;
                        }

                        // Отключаем статусы, если они не соответствуют порядку
                        if (
                            (newStatus === 'отклонен') ||
                            (newStatus === 'принят' && status === 'создан') ||
                             (newStatus === 'принят' && status === 'отклонен') ||
                            (newStatus === 'выполнен')
                        ) {
                            option.disabled = true;
                        }

                        updatedSelect.appendChild(option);
                    });

                    this.replaceWith(updatedSelect);
                    updateOrderStatus(updatedSelect); // Повторно вешаем обработчик
                } else {
                    alert('Ошибка: ' + data.message);
                }
            })
            .catch(error => console.error('Ошибка:', error));
        });
    }

    // Инициализация обработчиков для всех select
    document.querySelectorAll('.order-status').forEach(select => {
        updateOrderStatus(select);
    });
});

</script>
            
            </div>

        </div>
         {% endfor %}
    {% endif %}
    <div id="empty_px"></div>
    </main>
   
{% endblock %}
